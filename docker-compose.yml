version: "3.8"
services:
  gateway:
    image: nginx:1.19.8-alpine
    depends_on: 
      - media-service
      - user-service
    ports:
      - 8080:8080
    networks:
      - backend
    volumes:
      - ../nistagram-api-gateway/nginx.conf:/etc/nginx/nginx.conf
      - ../nistagram-api-gateway/api_gateway.conf:/etc/nginx/api_gateway.conf
  
  media-service-mysql:
    image: mysql:5.6.27
    ports:
      - 3306:3306
    volumes:
      - media_service_mysqldata:/var/lib/mysql
      - ./resources/initdb_media_service:/docker-entrypoint-initdb.d
    container_name: mysql-nistagram-media-service
    environment:
        MYSQL_ROOT_PASSWORD: root
    networks:
      - backend

  media-service:
    depends_on: 
      - media-service-mysql
      - prometheus
    # image: borisns/nistagram-media-service
    build:
      context: ../nistagram-media-service
      dockerfile: Dockerfile
    ports:
      - 9000:8000
    networks:
      - backend

  post-service-mysql:
    image: mysql:5.6.27
    ports:
      - 3307:3306
    volumes:
      - post_service_mysqldata:/var/lib/mysql
      - ./resources/initdb_post_service:/docker-entrypoint-initdb.d
    container_name: mysql-nistagram-post-service
    environment:
        MYSQL_ROOT_PASSWORD: root
    networks:
      - backend

  post-service:
    depends_on: 
      - post-service-mysql
      - prometheus
    # image: borisns/nistagram-post-service
    build:
      context: ../nistagram-post-service
      dockerfile: Dockerfile
    environment: 
      - DATABASE_HOST=post-service-mysql
      - DATABASE_PORT="3307"
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=root
    ports:
      - 9001:3000
    networks:
      - backend

  user-service-mysql:
    image: mysql:5.6.27
    ports:
      - 3308:3306
    volumes:
      - user_service_mysqldata:/var/lib/mysql
      - ./resources/initdb_user_service:/docker-entrypoint-initdb.d
    container_name: mysql-nistagram-user-service
    environment:
        MYSQL_ROOT_PASSWORD: root
    networks:
      - backend

  user-service:
    depends_on:
      - user-service-mysql
      - prometheus
    # image: borisns/nistagram-user-service
    build:
      context: ../nistagram-user-service
      dockerfile: Dockerfile
    environment: 
      - DATABASE_HOST=user-service-mysql
      - DATABASE_PORT="3308"
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=root
    ports:
      - 9002:3000
    networks:
      - backend

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: on-failure
    networks:
      - backend
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus

  node-exporter:
    image: prom/node-exporter:v1.1.2
    container_name: node-exporter
    networks:
      - backend
    ports:
      - 9100:9100

  grafana:
    image: grafana/grafana:7.5.2
    container_name: grafana
    depends_on:
      - prometheus
    restart: on-failure
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=password
    networks:
      - backend
    ports:
      - 3000:3000
    volumes: []

networks:
  backend:
    name: nistagram
    driver: bridge

volumes:
  media_service_mysqldata:
    driver: local
  post_service_mysqldata:
    driver: local
  user_service_mysqldata:
    driver: local
    